@model Corum.Models.FAQNavigationResult<Corum.Models.ViewModels.Admin.FAQAnswersViewModel>
@using GridMvc.Html

@{
    ViewBag.Title = "FAQ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@helper TPagging(string action, string controller, Corum.Models.NavigationInfo navInfo, WebViewPage page)
{
    <div class="table-footer clearfix">

        @{
            var proc = string.Concat("OnPageSizeTemplateChange('", page.Url.Action(@action, @controller), "');");
        }

        <div class="pull-left dropdown-footer">
            @page.Html.DropDownListFor(model => navInfo.PageSize,
                                 (List<System.Web.Mvc.SelectListItem>)navInfo.PageSizeTemplates,
                                                   new { @id = "PageSizeTemplates", onchange = proc })
        </div>

    </div>

}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12 main">
            <div class="form-group row">
                <div class="col-md-6">
                    <h4>Частозадаваемые вопросы:</h4>
                </div>
                <div class="col-md-6">
                    <div class="form-control-container full-width-select">
                        @using (Html.BeginForm("FAQ", "Admin", FormMethod.Get))
                        {
                            @Html.DropDownListFor(model => model.GroupeId,
                                                   new SelectList(Model.AvailiableGroupes.Select(x => new { Value = x.Id, Text = x.NameFAQGroup }), "Value", "Text", Model.GroupeId),
                                                   new { @class = "form-control input", onchange = @"form.submit();" })
                            @Html.ValidationMessageFor(model => model.GroupeId, "", new { @class = "text-danger" })
                        }
                    </div>
                </div>
            </div>
            <hr>
            <div class="table-header clearfix">
                <div class="row">
                    <div class="col-md-12">
                        @Html.ActionLink("Добавить вопрос", "NewFAQAnswer", "Admin", new { GroupeId = Model.GroupeId }, new { @class = "btn btn-primary", @style = "margin-bottom:10px; margin-left:15px;" })
                    </div>
                </div>
             
                        <div style="font-size: 13px;">
                            @(Html.Grid(Model.DisplayValues)
                  .Columns(columns =>
                  {
                  columns.Add(model => model.Question)
                    .Titled("Вопрос").Filterable(true).Sortable(true).SetWidth("80%"); 

                  columns.Add()
                     .Encoded(false)
                     .Sanitized(false)
                     .Css("centered_column")
                     .RenderValueAs(o =>
                        @<div class="edit-delete-copy-links">

                            <a class="tarash-i update_link tooltips" href="@Url.Action("UpdateFAQAnswer", "Admin", new { Id = o.Id })">
                                <span class="tooltip-message">Изменить вопрос-ответ</span>
                                <span class="glyphicon glyphicon-pencil"></span>
                            </a>

                            <a class="tarash-i update_link tooltips" href="@Url.Action("DeleteFAQAnswer", "Admin", new { Id = o.Id })">
                                <span class="tooltip-message">Удалить вопрос-ответ</span>
                                <span class="glyphicon glyphicon-trash"></span>
                            </a>
                        </div>);

                  }).Filterable().WithPaging((int)Model.RequestParams.PageSize))
                        </div>

            </div>

            @TPagging("FAQ", "Admin", @Model.RequestParams, this)
        </div>
    </div>
</div>

@section scripts
{
    <script>
        $(document).ready(function ()
        {
            InitializeDateTimePickers();
            InitFilterDropDowns();

        });

    </script>
}

