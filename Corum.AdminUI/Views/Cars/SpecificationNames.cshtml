@model Corum.Models.NavigationResult<Corum.Models.ViewModels.Cars.SpecificationNamesViewModel>
@using GridMvc.Html
@{
    ViewBag.Title = "Наименования услуг";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

@helper TPagging(string action, string controller, Corum.Models.NavigationInfo navInfo, WebViewPage page)
{
    <div class="table-footer clearfix">

        @{
            var proc = string.Concat("OnPageSizeTemplateChange('", page.Url.Action(@action, @controller), "');");
        }

        <div class="pull-left dropdown-footer">
            @page.Html.DropDownListFor(model => navInfo.PageSize,
                                 (List<System.Web.Mvc.SelectListItem>)navInfo.PageSizeTemplates,
                                                   new { @id = "PageSizeTemplates", onchange = proc })
        </div>

    </div>
}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-6 main">
            <h4 class="centered_column">Реестр наименований услуг</h4>
            <div class="table-header clearfix">
                <div class="row main">
                    @Html.ActionLink("Новый+", "NewSpecificationName", "Cars", null, new { @class = "btn btn-primary", @style = "margin-bottom:10px" })
                </div>
            </div>
            <div style="font-size: 13px;">
                @(Html.Grid(Model.DisplayValues)
                          .Columns(columns =>
                          {
                          columns.Add(model => model.SpecCode)
                          .Titled("Код<br>услуги").Filterable(true).Sortable(true);

                          columns.Add(model => model.SpecName)
                          .Titled("Наименование<br>услуги").Filterable(true).Sortable(true);


                          columns.Add()
                         .Titled("Действия")
                         .Encoded(false)
                         .Sanitized(false)
                         .Css("centered_column")
                         .RenderValueAs(o =>
                        @<div class="edit-delete-copy-links">
                            <a class="tarash-i update_link tooltips" href="@Url.Action("UpdateSpecificationName", "Cars", new {nameId = o.Id})">
                                <span class="tooltip-message">Изменить наименование услуги</span>
                                <span class="glyphicon glyphicon-pencil"></span>
                            </a>

                            <a class="tarash-i tooltips" href="@Url.Action("DeleteSpecificationName", "Cars", new {nameId = o.Id})" onclick="return confirm('Хотите удалить наименование услуги?');">
                                <span class="tooltip-message">Удалить наименование услуги</span>
                                <span class="glyphicon glyphicon-trash"></span>
                            </a>

                        </div>);


                          }).Filterable().WithPaging((int)Model.RequestParams.PageSize).WithMultipleFilters())
            </div>


            @TPagging("SpecificationNames", "Cars", @Model.RequestParams, this)

        </div>
    </div>
</div>



