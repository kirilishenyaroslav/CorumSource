@model Corum.Models.ViewModels.Cars.CarsViewModel

@{
    ViewBag.Title = "UpdateCar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("UpdateCar", "Cars", FormMethod.Post))
{

    <div class="form-horizontal">
        <h4>Детальная информация об автомобиле</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CarId, new {htmlAttributes = new {@class = "form-control"}})
        @Html.HiddenFor(model => model.CarOwnersId, new { htmlAttributes = new { @class = "form-control" } })

        <div class="row" style="font-size:12px;">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CarModel, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.CarModel, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.CarModel, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Driver, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Driver, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.Driver, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DriverLicenseSeria, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.DriverLicenseSeria, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.DriverLicenseSeria, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.DriverLicenseNumber, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.DriverLicenseNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.DriverLicenseNumber, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FuelTypeList, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.FuelTypeId,
                        new SelectList(Model.FuelTypeList.Select(x => new { Value = x.FuelTypeId, Text = x.FuelType }), "Value", "Text", Model.FuelTypeId),
                        new { @class = "form-control input" })
                    @Html.ValidationMessageFor(model => model.FuelTypeId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConsumptionCity, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.ConsumptionCity, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.ConsumptionCity, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConsumptionHighway, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.ConsumptionHighway, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.ConsumptionHighway, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PassNumber, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.PassNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.PassNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Применить" class="btn btn-default" />
                </div>
            </div>
        </div>
}


