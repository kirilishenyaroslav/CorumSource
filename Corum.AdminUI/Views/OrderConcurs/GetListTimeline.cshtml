@model Corum.Models.OrderNavigationResult<Corum.Models.ViewModels.OrderConcurs.CompetetiveListStepsInfoViewModel>
@using GridMvc.Html
@{
    ViewBag.Title = "Тайм-лайн конкурсного листа";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@helper TPagging(string action, string controller, Corum.Models.NavigationInfo navInfo, WebViewPage page)
{
    <div class="table-footer clearfix">

        @{
            var proc = string.Concat("OnPageSizeTemplateChange('", page.Url.Action(@action, @controller), "');");
        }

        <div class="pull-left dropdown-footer">
            @page.Html.DropDownListFor(model => navInfo.PageSize,
                                 (List<System.Web.Mvc.SelectListItem>)navInfo.PageSizeTemplates,
                                                   new { @id = "PageSizeTemplates", onchange = proc })
        </div>

    </div>

}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12 main">
            <h4>История изменения статусов конкурсного листа</h4>
            
            @Html.Partial("_OrderCompetitiveListInfo", Model.CompetitiveListInfo)

            <hr>

            <div class="table-header clearfix">

                <div class="col-md-12 main">
                @Html.ActionLink("В конкур. лист", "OrderCompetitiveList", "OrderConcurs", new { OrderId = Model.CompetitiveListInfo.Id }, new { @class = "btn btn-success", @style = "margin-bottom:10px" })
                
                    @Html.ActionLink("В заявку", "UpdateOrder", "Orders", new { Id = Model.CompetitiveListInfo.Id }, new { @class = "btn btn-success", @style = "margin-bottom:10px" })
                </div>
                
                <div style="font-size: 13px;">
                @(Html.Grid(Model.DisplayValues)
                  .Columns(columns =>
                  {
                      columns.Add(model => model.timestamp)
                        .Titled("Дата изменения").Filterable(true).Sortable(true).Sanitized(false).Encoded(false)
                         .RenderValueAs(o =>
                        @<div>
                            @o.timestampRaw                                
                             
                        </div>);
                      
                      columns.Add(model => model.PreviousStepFullCode)
                        .Titled("Со статуса").Filterable(true).Sortable(true);
                    
                      columns.Add(model => model.StepFullCode)
                        .Titled("На статус").Filterable(true).Sortable(true);

                      columns.Add(model => model.userName)
                        .Titled("Пользователь").Filterable(true).Sortable(true);
                     

                  }).Filterable().WithPaging((int)Model.RequestParams.PageSize).WithMultipleFilters())
                </div>
            </div>

            @TPagging("GetListTimeline", "OrderConcurs", @Model.RequestParams, this)

        </div>
    </div>
</div>

