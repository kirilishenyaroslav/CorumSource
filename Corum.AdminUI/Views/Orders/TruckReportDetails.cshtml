@model Corum.Models.OrdersReportsNavigationResult

@using System.Globalization
@using GridMvc.Html
@using GridMvc.Sorting


@{
    ViewBag.Title = "Отчет по грузоотправителю/грузополучателю";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .select2-container {
        width: 80%;
    }
</style>

@helper TPagging(string action, string controller, Corum.Models.NavigationInfo navInfo, WebViewPage page)
{
    <div class="table-footer clearfix">

        @{
            var proc = string.Concat("OnPageSizeOrdersReportsChange('", page.Url.Action(@action, @controller), "');");
        }

        <div class="pull-left dropdown-footer">
            @page.Html.DropDownListFor(model => navInfo.PageSize,
                                 (List<System.Web.Mvc.SelectListItem>)navInfo.PageSizeTemplates,
                                                   new { @id = "PageSizeTemplates", onchange = proc })
        </div>

    </div>

}


<div class="container-fluid">
    <div class="row ">
        <div class="col-lg-12" style="margin-top:35px;">
            <div class="row panel-title">
                <h2 class="centered_column">Информация по @Model.OrgName на дату @Model.ReportDate.ToString("dd.MM.yyyy")</h2> 
                <h4 class="centered_column">@Model.Address</h4> <br>
            </div>
            <div class="form-group">
                @Html.ActionLink("В excel", "TruckReportAsExcel", "ExportToExcel",
                            new
                            {
                                OrgId = Model.OrgId,
                                ReportDate = Model.ReportDate,
                                IdGroup = Model.IdGroup,
                                Id = Model.Id,
                                UseOrderTypeFilter = Model.UseOrderTypeFilter,
                                FilterOrderTypeId = Model.FilterOrderTypeId,
                                IdTree = Model.IdTree
                            },
                            new { @class = "delete_link btn btn-success", @style = "margin-left:10px;" })
            </div>
            <div class="table-header clearfix col-md-12" style="font-size: 11px;padding: 0;">
                @(Html.Grid(Model.TruckReportDetail.DisplayValues)
                  .Columns(columns =>
                  {

                  columns.Add().Encoded(false)
                      .Titled("Заказчик/<br>плательщик")
                      .Sanitized(false)
                      .Filterable(true)
                      .Sortable(true)
                      // .SortInitialDirection(GridSortDirection.Descending)
                      .RenderValueAs(o =>
                    @<div>                       
                            @o.BalanceKeeper / @o.CreatorByUserName 
                    </div>);

                
                  columns.Add().Encoded(false)
                      .Titled("Наименование<br>груза")
                      .Sanitized(false)
                      .Filterable(true)
                      .Sortable(true)
                      // .SortInitialDirection(GridSortDirection.Descending)
                      .RenderValueAs(o =>
                    @<div>
                        @o.TruckDescription
                    </div>);

                  columns.Add().Encoded(false)
                 .Titled("Экспедитор")
                 .Sanitized(false)
                 .Filterable(true)
                 .Sortable(true)
                 // .SortInitialDirection(GridSortDirection.Descending)
                 .RenderValueAs(o =>
                @<div>
                    @o.ExpeditorName
                </div>);

                  columns.Add().Encoded(false)
         .Titled("вид ТС")
         .Sanitized(false)
         .Filterable(true)
         .Sortable(true)
         // .SortInitialDirection(GridSortDirection.Descending)
         .RenderValueAs(o =>
        @<div>
            @o.CarCapacity
        </div>);

                  columns.Add().Encoded(false)
         .Titled("Марка ТС")
         .Sanitized(false)
         .Filterable(true)
         .Sortable(true)
         // .SortInitialDirection(GridSortDirection.Descending)
         .RenderValueAs(o =>
        @<div>
            @o.CarModelInfo
        </div>);

                  columns.Add().Encoded(false)
         .Titled("гос. номер")
         .Sanitized(false)
         .Filterable(true)
         .Sortable(true)
         // .SortInitialDirection(GridSortDirection.Descending)
         .RenderValueAs(o =>
        @<div>
            @o.CarRegNum
        </div>);


                  columns.Add().Encoded(false)
         .Titled("Водитель")
         .Sanitized(false)
         .Filterable(true)
         .Sortable(true)
         // .SortInitialDirection(GridSortDirection.Descending)
         .RenderValueAs(o =>
        @<div>
            @o.CarDriverInfo
        </div>);

                  columns.Add().Encoded(false)
  .Titled("Примечание")
  .Sanitized(false)
  .Filterable(true)
  .Sortable(true)
  // .SortInitialDirection(GridSortDirection.Descending)
  .RenderValueAs(o =>
@<div>

</div>);

                  columns.Add().Encoded(false)
  .Titled("Плановая<br>подача на<br>загрузку/<br>выгрузку")
  .Sanitized(false)
  .Filterable(true)
  .Sortable(true)
  .RenderValueAs(o =>
      @<div>
          @o.PlanDate 
                <br><hr>
    @o.PlanTime
</div>);

                  columns.Add().Encoded(false)
  .Titled("Фактическая<br>подача на<br>загрузку/<br>выгрузку")
  .Sanitized(false)
  .Filterable(true)
  .Sortable(true)
  .RenderValueAs(o =>
      @<div>
          @o.FactDate 
                <br><hr>
    @o.FactTime
</div>);
                  columns.Add().Encoded(false)
.Titled("Фактическая<br>загрузка/<br>выгрузка")
.Sanitized(false)
.Filterable(true)
.Sortable(true)
.RenderValueAs(o =>
@<div>
    @o.DateFactConsignee<br><hr>
    @o.TimeFactConsignee

</div>);

                  columns.Add().Encoded(false)
                .Titled("Отгрузка/<br>Поступление")
                .Sanitized(false)
                .Filterable(true)
                .Sortable(true)
                .RenderValueAs(o =>
                @<div>

                    @o.IsShipperString

                </div>);

                  }).WithPaging((int)Model.TruckReportDetail.RequestParams.PageSize))

            </div>


        </div>
    </div>
</div>


@section scripts
{
    <script>

        $(document).ready(function () {
            InitializeDateTimePickers();
            InitFilterMultipleDropDowns();
        });
    </script>
}
















