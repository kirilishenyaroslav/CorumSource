
@model Corum.Models.ViewModels.Orders.OrderStatusViewModel

@{
    ViewBag.Title = "UpdateStatus";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{

    <div class="form-horizontal">
        <h4>Детальная информация о статусе заявки</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })

        @Html.Partial("_StatusDetails")

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Применить" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section scripts
{
    <script>
    $(function () {




    $.widget( "custom.iconselectmenu", $.ui.selectmenu, {
      _renderItem: function( ul, item ) {
        var li = $( "<li>" ),
          wrapper = $( "<div>", { text: item.label } );

        if ( item.disabled ) {
          li.addClass( "ui-state-disabled" );
        }

        $( "<span>", {
          style: item.element.attr( "data-style" ),
          "class": "ui-icon " + item.element.attr( "data-class" )
        })
          .appendTo( wrapper );

        return li.append( wrapper ).appendTo( ul );
      }
    });

     $("#IconFile")
            .iconselectmenu({
                change: function (event, ui) {
                    $("#selectedIcon").attr("src", "/Content/icons/" + ui.item.value + ".png");
                }
            })
            .iconselectmenu("menuWidget")
            .addClass("ui-menu-icons customicons input")

        ;

  } );
    </script>

}






