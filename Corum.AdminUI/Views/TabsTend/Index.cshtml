
@{
    ViewBag.Title = "Index";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <title id='Description'>DataTable with Create, Remove and Update commands.</title>
    <meta name="description" content="JavaScript dataTable Inline Editing example" />
    <link rel="stylesheet" href="../../jqwidgets/styles/jqx.base.css" type="text/css" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="viewport" content="width=device-width, initial-scale=1 maximum-scale=1 minimum-scale=1" />
    <script type="text/javascript" src="~/Scripts/jquery-1.12.4.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery-ui-1.12.0.js"></script>
    @*<script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/scripts/jquery-1.11.1.min.js"></script>*@
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxcore.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxtooltip.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/scripts/demos.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxbuttons.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxscrollbar.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxdatatable.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxlistbox.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxdropdownlist.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxdata.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxinput.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxbuttons.js"></script>

    <link rel="stylesheet" href="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/styles/jqx.light.css" media="screen">
    <link rel="stylesheet" href="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/styles/jqx.base.css" type="text/css">

    <script type="text/javascript">
        $(function () {
            $("#tabs").tabs();
        });

        // Таблица JQueryUiWidgets
        $(document).ready(function () {
            var orderdetailsurl = "../sampledata/orderdetails.xml";

            var ordersSource =
            {
                dataFields: [
                    { name: 'OrderID', type: 'int' },
                    { name: 'Freight', type: 'float' },
                    { name: 'ShipName', type: 'string' },
                    { name: 'ShipAddress', type: 'string' },
                    { name: 'ShipCity', type: 'string' },
                    { name: 'ShipCountry', type: 'string' },
                    { name: 'ShippedDate', type: 'date' }
                ],
                root: "Orders",
                record: "Order",
                dataType: "xml",
                id: 'OrderID',
                url: orderdetailsurl,
                addRow: function (rowID, rowData, position, commit) {
                    // synchronize with the server - send insert command
                    // call commit with parameter true if the synchronization with the server is successful
                    // and with parameter false if the synchronization failed.
                    // you can pass additional argument to the commit callback which represents the new ID if it is generated from a DB.
                    commit(true);
                },
                updateRow: function (rowID, rowData, commit) {
                    // synchronize with the server - send update command
                    // call commit with parameter true if the synchronization with the server is successful
                    // and with parameter false if the synchronization failed.
                    commit(true);
                },
                deleteRow: function (rowID, commit) {
                    // synchronize with the server - send delete command
                    // call commit with parameter true if the synchronization with the server is successful
                    // and with parameter false if the synchronization failed.
                    commit(true);
                }
            };

            var dataAdapter = new $.jqx.dataAdapter(ordersSource, {
                loadComplete: function () {
                    // data is loaded.
                }
            });
            $("#table").jqxDataTable(
                {
                    width: getWidth("dataTable"),
                    source: dataAdapter,

                    pageable: true,
                    editable: true,
                    showToolbar: true,
                    altRows: true,
                    ready: function () {
                        // called when the DataTable is loaded.
                    },
                    pagerButtonsCount: 8,
                    toolbarHeight: 35,
                    renderToolbar: function (toolBar) {
                        var toTheme = function (className) {
                            if (theme == "") return className;
                            return className + " " + className + "-" + theme;
                        }

                        // appends buttons to the status bar.
                        var container = $("<div style='overflow: hidden; position: relative; height: 100%; width: 100%;'></div>");
                        var buttonTemplate = "<div style='float: left; padding: 3px; margin: 2px;'><div style='margin: 4px; width: 16px; height: 16px;'></div></div>";
                        var addButton = $(buttonTemplate);
                        var editButton = $(buttonTemplate);
                        var deleteButton = $(buttonTemplate);
                        var cancelButton = $(buttonTemplate);
                        var updateButton = $(buttonTemplate);
                        container.append(addButton);
                        container.append(editButton);
                        container.append(deleteButton);
                        container.append(cancelButton);
                        container.append(updateButton);

                        toolBar.append(container);
                        addButton.jqxButton({ cursor: "pointer", enableDefault: false, height: 25, width: 25 });
                        addButton.find('div:first').addClass(toTheme('jqx-icon-plus'));
                        addButton.jqxTooltip({ position: 'bottom', content: "Add" });

                        editButton.jqxButton({ cursor: "pointer", disabled: true, enableDefault: false, height: 25, width: 25 });
                        editButton.find('div:first').addClass(toTheme('jqx-icon-edit'));
                        editButton.jqxTooltip({ position: 'bottom', content: "Edit" });

                        deleteButton.jqxButton({ cursor: "pointer", disabled: true, enableDefault: false, height: 25, width: 25 });
                        deleteButton.find('div:first').addClass(toTheme('jqx-icon-delete'));
                        deleteButton.jqxTooltip({ position: 'bottom', content: "Delete" });

                        updateButton.jqxButton({ cursor: "pointer", disabled: true, enableDefault: false, height: 25, width: 25 });
                        updateButton.find('div:first').addClass(toTheme('jqx-icon-save'));
                        updateButton.jqxTooltip({ position: 'bottom', content: "Save Changes" });

                        cancelButton.jqxButton({ cursor: "pointer", disabled: true, enableDefault: false, height: 25, width: 25 });
                        cancelButton.find('div:first').addClass(toTheme('jqx-icon-cancel'));
                        cancelButton.jqxTooltip({ position: 'bottom', content: "Cancel" });

                        var updateButtons = function (action) {
                            switch (action) {
                                case "Select":
                                    addButton.jqxButton({ disabled: false });
                                    deleteButton.jqxButton({ disabled: false });
                                    editButton.jqxButton({ disabled: false });
                                    cancelButton.jqxButton({ disabled: true });
                                    updateButton.jqxButton({ disabled: true });
                                    break;
                                case "Unselect":
                                    addButton.jqxButton({ disabled: false });
                                    deleteButton.jqxButton({ disabled: true });
                                    editButton.jqxButton({ disabled: true });
                                    cancelButton.jqxButton({ disabled: true });
                                    updateButton.jqxButton({ disabled: true });
                                    break;
                                case "Edit":
                                    addButton.jqxButton({ disabled: true });
                                    deleteButton.jqxButton({ disabled: true });
                                    editButton.jqxButton({ disabled: true });
                                    cancelButton.jqxButton({ disabled: false });
                                    updateButton.jqxButton({ disabled: false });
                                    break;
                                case "End Edit":
                                    addButton.jqxButton({ disabled: false });
                                    deleteButton.jqxButton({ disabled: false });
                                    editButton.jqxButton({ disabled: false });
                                    cancelButton.jqxButton({ disabled: true });
                                    updateButton.jqxButton({ disabled: true });
                                    break;

                            }
                        }

                        var rowIndex = null;
                        $("#table").on('rowSelect', function (event) {
                            var args = event.args;
                            rowIndex = args.index;
                            updateButtons('Select');
                        });
                        $("#table").on('rowUnselect', function (event) {
                            updateButtons('Unselect');
                        });
                        $("#table").on('rowEndEdit', function (event) {
                            updateButtons('End Edit');
                        });
                        $("#table").on('rowBeginEdit', function (event) {
                            updateButtons('Edit');
                        });
                        addButton.click(function (event) {
                            if (!addButton.jqxButton('disabled')) {
                                // add new empty row.
                                $("#table").jqxDataTable('addRow', null, {}, 'first');
                                // select the first row and clear the selection.
                                $("#table").jqxDataTable('clearSelection');
                                $("#table").jqxDataTable('selectRow', 0);
                                // edit the new row.
                                $("#table").jqxDataTable('beginRowEdit', 0);
                                updateButtons('add');
                            }
                        });

                        cancelButton.click(function (event) {
                            if (!cancelButton.jqxButton('disabled')) {
                                // cancel changes.
                                $("#table").jqxDataTable('endRowEdit', rowIndex, true);
                            }
                        });

                        updateButton.click(function (event) {
                            if (!updateButton.jqxButton('disabled')) {
                                // save changes.
                                $("#table").jqxDataTable('endRowEdit', rowIndex, false);
                            }
                        });

                        editButton.click(function () {
                            if (!editButton.jqxButton('disabled')) {
                                $("#table").jqxDataTable('beginRowEdit', rowIndex);
                                updateButtons('edit');

                            }
                        });
                        deleteButton.click(function () {
                            if (!deleteButton.jqxButton('disabled')) {
                                $("#table").jqxDataTable('deleteRow', rowIndex);
                                updateButtons('delete');

                            }
                        });
                    },
                    columns: [
                        { text: 'Order ID', editable: false, dataField: 'OrderID', width: 200 },
                        { text: 'Freight', dataField: 'Freight', cellsFormat: 'f', cellsAlign: 'right', align: 'right', width: 200 },
                        {
                            text: 'Ship Country', dataField: 'ShipCountry', width: 250,
                            columnType: 'custom',
                            createEditor: function (row, cellValue, editor, width, height) {
                                // create jqxInput editor.
                                var textBox = $("<input style='padding-left: 4px; box-sizing: border-box; -moz-box-sizing: border-box; border: none;'/>").appendTo(editor);
                                var countries = new Array("Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Antarctica", "Antigua and Barbuda", "Argentina", "Armenia", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil", "Brunei", "Bulgaria", "Burkina Faso", "Burma", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Central African Republic", "Chad", "Chile", "China", "Colombia", "Comoros", "Congo, Democratic Republic", "Congo, Republic of the", "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "East Timor", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Fiji", "Finland", "France", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Greece", "Greenland", "Grenada", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Korea, North", "Korea, South", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mexico", "Micronesia", "Moldova", "Mongolia", "Morocco", "Monaco", "Mozambique", "Namibia", "Nauru", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Norway", "Oman", "Pakistan", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Qatar", "Romania", "Russia", "Rwanda", "Samoa", "San Marino", " Sao Tome", "Saudi Arabia", "Senegal", "Serbia and Montenegro", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "Spain", "Sri Lanka", "Sudan", "Suriname", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Togo", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Yemen", "Zambia", "Zimbabwe");
                                textBox.jqxInput({ source: countries, width: '100%', height: '100%' });
                                textBox.val(cellValue);
                            },
                            initEditor: function (row, cellValue, editor) {
                                // set jqxInput editor's initial value.
                                editor.find('input').val(cellValue);
                            },
                            getEditorValue: function (index, value, editor) {
                                // get jqxInput editor's value.
                                return editor.find('input').val();
                            }
                        },
                        { text: 'Shipped Date', dataField: 'ShippedDate', cellsAlign: 'right', align: 'right', cellsFormat: 'dd/MM/yyyy' }
                    ]
                });
        });
    </script>
</head>

<body class='default'>
    <h2>Index</h2>
    <div id="tabs">
        <ul>
            <li><a href="#tabs-1">Nunc tincidunt</a></li>
            <li><a href="#tabs-2">Proin dolor</a></li>
            <li><a href="#tabs-3">Aenean lacinia</a></li>
        </ul>
        <div id="tabs-1">
            <p>Proin elit arcu, rutrum commodo, vehicula tempus, commodo a, risus. Curabitur nec arcu. Donec sollicitudin mi sit amet mauris. Nam elementum quam ullamcorper ante. Etiam aliquet massa et lorem. Mauris dapibus lacus auctor risus. Aenean tempor ullamcorper leo. Vivamus sed magna quis ligula eleifend adipiscing. Duis orci. Aliquam sodales tortor vitae ipsum. Aliquam nulla. Duis aliquam molestie erat. Ut et mauris vel pede varius sollicitudin. Sed ut dolor nec orci tincidunt interdum. Phasellus ipsum. Nunc tristique tempus lectus.</p>
        </div>
        <div id="tabs-2">
            <p>Morbi tincidunt, dui sit amet facilisis feugiat, odio metus gravida ante, ut pharetra massa metus id nunc. Duis scelerisque molestie turpis. Sed fringilla, massa eget luctus malesuada, metus eros molestie lectus, ut tempus eros massa ut dolor. Aenean aliquet fringilla sem. Suspendisse sed ligula in ligula suscipit aliquam. Praesent in eros vestibulum mi adipiscing adipiscing. Morbi facilisis. Curabitur ornare consequat nunc. Aenean vel metus. Ut posuere viverra nulla. Aliquam erat volutpat. Pellentesque convallis. Maecenas feugiat, tellus pellentesque pretium posuere, felis lorem euismod felis, eu ornare leo nisi vel felis. Mauris consectetur tortor et purus.</p>
            </div>
            <div id="tabs-3">
                <div id="table">

                </div>
            </div>
        </div>
    </body>
</html>
    
    


    <!--<script type="text/javascript" src="~/Scripts/demos.js"></script>
    <script type="text/javascript" src="~/Scripts/JQWidgets/jqxcore.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery-1.12.4.min.js"></script>

    <link rel="stylesheet" href="~/Content/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="/resources/demos/style.css">
    @Scripts.Render("~/scripts/jquery-1.12.4.js")
    @Scripts.Render("~/scripts/jquery-ui-1.12.0.js")
    <link rel="stylesheet" href="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/styles/jqx.light.css" media="screen">
    <link rel="stylesheet" href="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/styles/jqx.base.css" type="text/css">

    <!--<script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxbuttons.js"></script>-->
    -->
    <!--@*<script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxcore.js"></script>*@-->
    <!--<!--<script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/scripts/jquery-1.11.1.min.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxbuttons.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxscrollbar.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxdatatable.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxlistbox.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxdropdownlist.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxdata.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxinput.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/jqxtooltip.js"></script>-->
    -->
    <!--@*<script type="text/javascript" src="https://www.jqwidgets.com/jquery-widgets-demo/scripts/demos.js"></script>*@-->
    <!--<link rel="stylesheet" href="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/styles/jqx.light.css" media="screen">
    <link rel="stylesheet" href="https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/styles/jqx.base.css" type="text/css">-->
    <!--<script>
        $(function () {
            $("#tabs").tabs();
        });

        // Таблица JQueryUiWidgets
        $(document).ready(function () {
            var orderdetailsurl = "../sampledata/orderdetails.xml";

            var ordersSource =
            {
                dataFields: [
                    { name: 'OrderID', type: 'int' },
                    { name: 'Freight', type: 'float' },
                    { name: 'ShipName', type: 'string' },
                    { name: 'ShipAddress', type: 'string' },
                    { name: 'ShipCity', type: 'string' },
                    { name: 'ShipCountry', type: 'string' },
                    { name: 'ShippedDate', type: 'date' }
                ],
                root: "Orders",
                record: "Order",
                dataType: "xml",
                id: 'OrderID',
                url: orderdetailsurl,
                addRow: function (rowID, rowData, position, commit) {
                    // synchronize with the server - send insert command
                    // call commit with parameter true if the synchronization with the server is successful
                    // and with parameter false if the synchronization failed.
                    // you can pass additional argument to the commit callback which represents the new ID if it is generated from a DB.
                    commit(true);
                },
                updateRow: function (rowID, rowData, commit) {
                    // synchronize with the server - send update command
                    // call commit with parameter true if the synchronization with the server is successful
                    // and with parameter false if the synchronization failed.
                    commit(true);
                },
                deleteRow: function (rowID, commit) {
                    // synchronize with the server - send delete command
                    // call commit with parameter true if the synchronization with the server is successful
                    // and with parameter false if the synchronization failed.
                    commit(true);
                }
            };

            var dataAdapter = new $.jqx.dataAdapter(ordersSource, {
                loadComplete: function () {
                    // data is loaded.
                }
            });
            $("#table").jqxDataTable(
                {
                    width: getWidth("dataTable"),
                    source: dataAdapter,

                    pageable: true,
                    editable: true,
                    showToolbar: true,
                    altRows: true,
                    ready: function () {
                        // called when the DataTable is loaded.
                    },
                    pagerButtonsCount: 8,
                    toolbarHeight: 35,
                    renderToolbar: function (toolBar) {
                        var toTheme = function (className) {
                            if (theme == "") return className;
                            return className + " " + className + "-" + theme;
                        }

                        // appends buttons to the status bar.
                        var container = $("<div style='overflow: hidden; position: relative; height: 100%; width: 100%;'></div>");
                        var buttonTemplate = "<div style='float: left; padding: 3px; margin: 2px;'><div style='margin: 4px; width: 16px; height: 16px;'></div></div>";
                        var addButton = $(buttonTemplate);
                        var editButton = $(buttonTemplate);
                        var deleteButton = $(buttonTemplate);
                        var cancelButton = $(buttonTemplate);
                        var updateButton = $(buttonTemplate);
                        container.append(addButton);
                        container.append(editButton);
                        container.append(deleteButton);
                        container.append(cancelButton);
                        container.append(updateButton);

                        toolBar.append(container);
                        addButton.jqxButton({ cursor: "pointer", enableDefault: false, height: 25, width: 25 });
                        addButton.find('div:first').addClass(toTheme('jqx-icon-plus'));
                        addButton.jqxTooltip({ position: 'bottom', content: "Add" });

                        editButton.jqxButton({ cursor: "pointer", disabled: true, enableDefault: false, height: 25, width: 25 });
                        editButton.find('div:first').addClass(toTheme('jqx-icon-edit'));
                        editButton.jqxTooltip({ position: 'bottom', content: "Edit" });

                        deleteButton.jqxButton({ cursor: "pointer", disabled: true, enableDefault: false, height: 25, width: 25 });
                        deleteButton.find('div:first').addClass(toTheme('jqx-icon-delete'));
                        deleteButton.jqxTooltip({ position: 'bottom', content: "Delete" });

                        updateButton.jqxButton({ cursor: "pointer", disabled: true, enableDefault: false, height: 25, width: 25 });
                        updateButton.find('div:first').addClass(toTheme('jqx-icon-save'));
                        updateButton.jqxTooltip({ position: 'bottom', content: "Save Changes" });

                        cancelButton.jqxButton({ cursor: "pointer", disabled: true, enableDefault: false, height: 25, width: 25 });
                        cancelButton.find('div:first').addClass(toTheme('jqx-icon-cancel'));
                        cancelButton.jqxTooltip({ position: 'bottom', content: "Cancel" });

                        var updateButtons = function (action) {
                            switch (action) {
                                case "Select":
                                    addButton.jqxButton({ disabled: false });
                                    deleteButton.jqxButton({ disabled: false });
                                    editButton.jqxButton({ disabled: false });
                                    cancelButton.jqxButton({ disabled: true });
                                    updateButton.jqxButton({ disabled: true });
                                    break;
                                case "Unselect":
                                    addButton.jqxButton({ disabled: false });
                                    deleteButton.jqxButton({ disabled: true });
                                    editButton.jqxButton({ disabled: true });
                                    cancelButton.jqxButton({ disabled: true });
                                    updateButton.jqxButton({ disabled: true });
                                    break;
                                case "Edit":
                                    addButton.jqxButton({ disabled: true });
                                    deleteButton.jqxButton({ disabled: true });
                                    editButton.jqxButton({ disabled: true });
                                    cancelButton.jqxButton({ disabled: false });
                                    updateButton.jqxButton({ disabled: false });
                                    break;
                                case "End Edit":
                                    addButton.jqxButton({ disabled: false });
                                    deleteButton.jqxButton({ disabled: false });
                                    editButton.jqxButton({ disabled: false });
                                    cancelButton.jqxButton({ disabled: true });
                                    updateButton.jqxButton({ disabled: true });
                                    break;

                            }
                        }

                        var rowIndex = null;
                        $("#table").on('rowSelect', function (event) {
                            var args = event.args;
                            rowIndex = args.index;
                            updateButtons('Select');
                        });
                        $("#table").on('rowUnselect', function (event) {
                            updateButtons('Unselect');
                        });
                        $("#table").on('rowEndEdit', function (event) {
                            updateButtons('End Edit');
                        });
                        $("#table").on('rowBeginEdit', function (event) {
                            updateButtons('Edit');
                        });
                        addButton.click(function (event) {
                            if (!addButton.jqxButton('disabled')) {
                                // add new empty row.
                                $("#table").jqxDataTable('addRow', null, {}, 'first');
                                // select the first row and clear the selection.
                                $("#table").jqxDataTable('clearSelection');
                                $("#table").jqxDataTable('selectRow', 0);
                                // edit the new row.
                                $("#table").jqxDataTable('beginRowEdit', 0);
                                updateButtons('add');
                            }
                        });

                        cancelButton.click(function (event) {
                            if (!cancelButton.jqxButton('disabled')) {
                                // cancel changes.
                                $("#table").jqxDataTable('endRowEdit', rowIndex, true);
                            }
                        });

                        updateButton.click(function (event) {
                            if (!updateButton.jqxButton('disabled')) {
                                // save changes.
                                $("#table").jqxDataTable('endRowEdit', rowIndex, false);
                            }
                        });

                        editButton.click(function () {
                            if (!editButton.jqxButton('disabled')) {
                                $("#table").jqxDataTable('beginRowEdit', rowIndex);
                                updateButtons('edit');

                            }
                        });
                        deleteButton.click(function () {
                            if (!deleteButton.jqxButton('disabled')) {
                                $("#table").jqxDataTable('deleteRow', rowIndex);
                                updateButtons('delete');

                            }
                        });
                    },
                    columns: [
                        { text: 'Order ID', editable: false, dataField: 'OrderID', width: 200 },
                        { text: 'Freight', dataField: 'Freight', cellsFormat: 'f', cellsAlign: 'right', align: 'right', width: 200 },
                        {
                            text: 'Ship Country', dataField: 'ShipCountry', width: 250,
                            columnType: 'custom',
                            createEditor: function (row, cellValue, editor, width, height) {
                                // create jqxInput editor.
                                var textBox = $("<input style='padding-left: 4px; box-sizing: border-box; -moz-box-sizing: border-box; border: none;'/>").appendTo(editor);
                                var countries = new Array("Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Antarctica", "Antigua and Barbuda", "Argentina", "Armenia", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil", "Brunei", "Bulgaria", "Burkina Faso", "Burma", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Central African Republic", "Chad", "Chile", "China", "Colombia", "Comoros", "Congo, Democratic Republic", "Congo, Republic of the", "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "East Timor", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Fiji", "Finland", "France", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Greece", "Greenland", "Grenada", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Korea, North", "Korea, South", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mexico", "Micronesia", "Moldova", "Mongolia", "Morocco", "Monaco", "Mozambique", "Namibia", "Nauru", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Norway", "Oman", "Pakistan", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Qatar", "Romania", "Russia", "Rwanda", "Samoa", "San Marino", " Sao Tome", "Saudi Arabia", "Senegal", "Serbia and Montenegro", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "Spain", "Sri Lanka", "Sudan", "Suriname", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Togo", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Yemen", "Zambia", "Zimbabwe");
                                textBox.jqxInput({ source: countries, width: '100%', height: '100%' });
                                textBox.val(cellValue);
                            },
                            initEditor: function (row, cellValue, editor) {
                                // set jqxInput editor's initial value.
                                editor.find('input').val(cellValue);
                            },
                            getEditorValue: function (index, value, editor) {
                                // get jqxInput editor's value.
                                return editor.find('input').val();
                            }
                        },
                        { text: 'Shipped Date', dataField: 'ShippedDate', cellsAlign: 'right', align: 'right', cellsFormat: 'dd/MM/yyyy' }
                    ]
                });
        });

    </script>


    <div id="tabs">
        <ul>
            <li><a href="#tabs-1">Nunc tincidunt</a></li>
            <li><a href="#tabs-2">Proin dolor</a></li>
            <li><a href="#tabs-3">Aenean lacinia</a></li>
        </ul>
        <div id="tabs-1">
            <p>Proin elit arcu, rutrum commodo, vehicula tempus, commodo a, risus. Curabitur nec arcu. Donec sollicitudin mi sit amet mauris. Nam elementum quam ullamcorper ante. Etiam aliquet massa et lorem. Mauris dapibus lacus auctor risus. Aenean tempor ullamcorper leo. Vivamus sed magna quis ligula eleifend adipiscing. Duis orci. Aliquam sodales tortor vitae ipsum. Aliquam nulla. Duis aliquam molestie erat. Ut et mauris vel pede varius sollicitudin. Sed ut dolor nec orci tincidunt interdum. Phasellus ipsum. Nunc tristique tempus lectus.</p>
        </div>
        <div id="tabs-2">
            <p>Morbi tincidunt, dui sit amet facilisis feugiat, odio metus gravida ante, ut pharetra massa metus id nunc. Duis scelerisque molestie turpis. Sed fringilla, massa eget luctus malesuada, metus eros molestie lectus, ut tempus eros massa ut dolor. Aenean aliquet fringilla sem. Suspendisse sed ligula in ligula suscipit aliquam. Praesent in eros vestibulum mi adipiscing adipiscing. Morbi facilisis. Curabitur ornare consequat nunc. Aenean vel metus. Ut posuere viverra nulla. Aliquam erat volutpat. Pellentesque convallis. Maecenas feugiat, tellus pellentesque pretium posuere, felis lorem euismod felis, eu ornare leo nisi vel felis. Mauris consectetur tortor et purus.</p>
        </div>
        <div id="tabs-3">
            <div id="table">

            </div>
        </div>
    </div>-->
