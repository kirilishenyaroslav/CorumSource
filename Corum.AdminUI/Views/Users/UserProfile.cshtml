@model Corum.Models.ViewModels.UserProfileViewModel

@{
    ViewBag.Title = "UserProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("UserProfile", "Users", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Профиль пользователя @Model.UserName</h4>
        <hr />

        @Html.HiddenFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })



        <div class="form-group">
            @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="form-control-container full-width-select">
                    @Html.TextBoxFor(model => model.CountryId,
                    (object)new
                    {
                        id = "CountryId",
                        @class = "filter_dropdown form-control input",
                        @name = "CountryId",
                        data_source_url = Url.Action("GetCountries", "Orders"),
                        data_droplist_placeholder = "Выберите страну",
                        data_selected_text = Model.Country
                    })
                </div>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AdressFrom, htmlAttributes: new {@class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AdressFrom, new {htmlAttributes = new {@class = "form-control", autocomplete = "off"}})
                @Html.ValidationMessageFor(model => model.AdressFrom, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isFinishStatuses, htmlAttributes: new { @class = "control-label col-md-2" })            
            <div class="col-md-10">
                <select name='isFinishStatuses' id='isFinishStatuses' size='1'>
                    <option value="false" selected="@(Model.isFinishStatuses==false)">Обработка заявок</option>
                    <option value="true" selected="@(Model.isFinishStatuses==true)">Финальные статусы</option>
                </select>
            </div>
        </div>
        
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Применить" class="btn btn-default" />
        </div>
    </div>

}




@section scripts
{
    <script>
        $(document).ready(function () {
            InitializeDateTimePickers();
            InitFilterDropDowns();

        });

    </script>
}