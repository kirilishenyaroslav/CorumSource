@model Corum.Models.OrderNavigationResult<Corum.Models.ViewModels.OrderConcurs.ConcursDiscountRateModel>
@using GridMvc.Html
@{
    ViewBag.Title = "Справочник ставок дисконтирования";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@helper TPagging(string action, string controller, Corum.Models.NavigationInfo navInfo, WebViewPage page)
{
    <div class="table-footer clearfix">

        @{
            var proc = string.Concat("OnPageSizeTemplateChange('", page.Url.Action(@action, @controller), "');");
        }

        <div class="pull-left dropdown-footer">
            @page.Html.DropDownListFor(model => navInfo.PageSize,
                                 (List<System.Web.Mvc.SelectListItem>)navInfo.PageSizeTemplates,
                                                   new { @id = "PageSizeTemplates", onchange = proc })
        </div>

    </div>

}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12 main">
            <h4 class="centered_column">Ставки дисконтирования</h4>
            <div class="table-header clearfix">
                <div class="row main">
                    @Html.ActionLink("Новый+", "NewDiscountRate", "OrderConcurs", null, new { @class = "btn btn-primary", @style = "margin-bottom:10px" })
                    @Html.ActionLink("В конкур. лист", "OrderCompetitiveList", "OrderConcurs", new { OrderId = Model.OrderId }, new { @class = "btn btn-success", @style = "margin-bottom:10px" })
                    @Html.ActionLink("В заявку", "UpdateOrder", "Orders", new { Id = Model.OrderId }, new { @class = "btn btn-success", @style = "margin-bottom:10px" })
                </div>
            </div>

            <div class="table-header clearfix">                             
                <div style="font-size: 13px;">
                @(Html.Grid(Model.DisplayValues)
                  .Columns(columns =>
                  {
                  columns.Add(model => model.DiscountRate)
                    .Titled("Ставка дисконтирования").Filterable(true).Sortable(true);

                  columns.Add(model => model.DateBeg)
                    .Titled("Дата начала").Filterable(true).Sortable(true);

                  columns.Add(model => model.DateEnd)
                    .Titled("Дата конца").Filterable(true).Sortable(true);

                  columns.Add()
                     .Titled("Действия")
                     .Encoded(false)
                     .Sanitized(false)
                     .Css("centered_column")
                     .RenderValueAs(o =>
                    @<div class="edit-delete-copy-links">
                        <a class="tarash-i update_link tooltips" href="@Url.Action("UpdateDiscountRate", "OrderConcurs", new {Id = o.Id})">
        <span class="tooltip-message">Изменить ставку дисконтирования</span>
        <span class="glyphicon glyphicon-pencil"></span>
    </a>

    <a class="tarash-i tooltips" href="@Url.Action("DeleteDiscountRate", "OrderConcurs", new {Id = o.Id})" onclick="return confirm('Хотите удалить ставку дисконтирования?');">
        <span class="tooltip-message">Удалить ставку дисконтирования</span>
        <span class="glyphicon glyphicon-trash"></span>
    </a>

                    </div>);

                  }).Filterable().WithPaging((int)Model.RequestParams.PageSize).WithMultipleFilters())
                </div>
            </div>

            @TPagging("ConcursDiscountRate", "OrderConcurs", @Model.RequestParams, this)

        </div>
    </div>
</div>

