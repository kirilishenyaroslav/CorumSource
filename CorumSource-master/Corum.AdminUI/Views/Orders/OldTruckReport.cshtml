@model Corum.Models.OrdersReportsNavigationResult

@using System.Globalization
@using GridMvc.Html
@using GridMvc.Sorting


@{
    ViewBag.Title = "Отчет по грузоотправителю/грузополучателю";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .select2-container {
        width: 80%;
    }
</style>

@helper TPagging(string action, string controller, Corum.Models.NavigationInfo navInfo, WebViewPage page)
{
    <div class="table-footer clearfix">

        @{
            var proc = string.Concat("OnPageSizeOrdersReportsChange('", page.Url.Action(@action, @controller), "');");
        }

        <div class="pull-left dropdown-footer">
            @page.Html.DropDownListFor(model => navInfo.PageSize,
                                 (List<System.Web.Mvc.SelectListItem>)navInfo.PageSizeTemplates,
                                                   new { @id = "PageSizeTemplates", onchange = proc })
        </div>

    </div>

}


<div class="container-fluid">
    <div class="row ">
        <div class="col-lg-12" style="margin-top:35px;">
            <div class="row panel-title">
                <h2 class="centered_column">Отчет по грузоотправителю/грузополучателю</h2> <br>
            </div>

            @using (Html.BeginForm("TruckReport", "Orders", FormMethod.Get))
            {
                <div class="table-header clearfix" style="margin-top: 20px;">
                    <div class="row panel panel-info">
                        <div class="col-md-8" style="margin-top: 10px;">
                            <div class="form-group row">

                                <div class="col-md-4">                                   
                                    @Html.Label("Дата:", htmlAttributes: new { @style = "font-weight: inherit;" })<br>                                   
                                </div>
                               
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.FilterOrderDate, new { htmlAttributes = new { @class = "order-dates form-control datetimepicker client-info", autocomplete = "off", data_raw_element = "FilterOrderDateRaw", @style = "height: 2em!important; display:inline;" } })
                                        @Html.HiddenFor(model => model.FilterOrderDate)
                                        @Html.HiddenFor(model => model.FilterOrderDateRaw)
                                    </div>                                                             
                            </div>
                          
                            <div class="form-group row">
                                <label class="col-md-4" style="font-weight: normal !important;">
                                    @Html.CheckBoxFor(model => model.UseOrderTypeFilter, new { onclick = "$('#FilterOrderTypeId').prop('disabled', !this.checked);" })&nbsp;Тип заявки
                                </label>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.FilterOrderTypeId,
                                        Model.UseOrderTypeFilter ?
                                            (object)new
                                            {
                                                id = "FilterOrderTypeId",
                                                @class = "filter_dropdown",
                                                @name = "FilterOrderTypeId",
                                                data_source_url = Url.Action("GetOrderTruckTypes", "Orders"),
                                                data_droplist_placeholder = "Введите тип заявки",
                                                data_selected_text = Model.FilterOrderTypeName
                                            } :
                                            (object)new
                                            {
                                                id = "FilterOrderTypeId",
                                                @class = "filter_dropdown",
                                                @name = "FilterOrderTypeId",
                                                data_source_url = Url.Action("GetOrderTruckTypes", "Orders"),
                                                data_droplist_placeholder = "Введите тип заявки",
                                                @disabled = "disabled",
                                                data_selected_text = Model.FilterOrderTypeName
                                            })
                                </div>
                                @Html.HiddenFor(model => model.FilterOrderTypeId)
                                @Html.HiddenFor(model => model.UseOrderTypeFilter)
                            </div>                          
                        </div>

                        <div class="form-group">
                            <div style="margin-top: 10px;">                                
                                <input type="submit" value="Применить" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                </div>
            }


            <div id="detailValGrid" class="table-header clearfix col-md-12" style="font-size: 11px;padding: 0;">
                @(Html.Grid(Model.TruckReport.DisplayValues)
                  .Columns(columns =>
                  {
                     
                      columns.Add(model => model.Shipper).Encoded(false)
                          .Titled("Грузотправитель/Грузополучатель")
                          .Sanitized(false)                        
                          .Filterable(true)
                          .Sortable(true)
                         // .SortInitialDirection(GridSortDirection.Descending)
                          .RenderValueAs(o =>
                              @<div>
                                  @o.Shipper                                 
                              </div>);
                                                                                             
                  columns.Add()
             .Titled("Действия")
             .SetWidth(5)
             .Encoded(false)
             .Sanitized(false)
             .Css("centered_column colored-cell new_columns_block_end min-height-cell")
             .RenderValueAs(o =>
                 @<div class="edit-delete-copy-links">                     
                         <a class="tarash-i update_link tooltips" href="@Url.Action("TruckReportDetails", "Orders", new { OrgId = o.ShipperId, ReportDate  = o.ReportsDate, UseOrderTypeFilter = Model.UseOrderTypeFilter, FilterOrderTypeId = Model.FilterOrderTypeId })">
                             <span class="tooltip-message">Просмотр</span>
                             <span class="glyphicon glyphicon-eye-open"></span>
                         </a>                
            </div>);

                  }).WithPaging((int)Model.TruckReport.RequestParams.PageSize))

            </div>


        </div>
    </div>
</div>


@section scripts
{
    <script>      
        $(document).ready(function() {
            InitializeDateTimePickers();
            InitFilterMultipleDropDowns();           
            });
    </script>
}














