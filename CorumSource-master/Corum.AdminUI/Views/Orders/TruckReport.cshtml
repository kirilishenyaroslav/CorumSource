@model Corum.Models.OrdersReportsNavigationResult

@using System.Globalization
@using GridMvc.Html
@using GridMvc.Sorting


@{
    ViewBag.Title = "Отчет по грузоотправителю/грузополучателю";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .select2-container {
        width: 80%;
    }
</style>

@helper TPagging(string action, string controller, Corum.Models.NavigationInfo navInfo, WebViewPage page)
{
    <div class="table-footer clearfix">

        @{
            var proc = string.Concat("OnPageSizeOrdersReportsChange('", page.Url.Action(@action, @controller), "');");
        }

        <div class="pull-left dropdown-footer">
            @page.Html.DropDownListFor(model => navInfo.PageSize,
                                 (List<System.Web.Mvc.SelectListItem>)navInfo.PageSizeTemplates,
                                                   new { @id = "PageSizeTemplates", onchange = proc })
        </div>

    </div>

}


<div class="container-fluid">
    <div class="row ">
        <div class="col-lg-12" style="margin-top:35px;">
            <div class="row panel-title">
                <h2 class="centered_column">Отчет по грузоотправителю/грузополучателю</h2> <br>
            </div>

            @using (Html.BeginForm("TruckReport", "Orders", FormMethod.Get))
            {
                <div class="table-header clearfix" style="margin-top: 20px;">
                    <div class="row panel panel-info">
                        <div class="col-md-8" style="margin-top: 10px;">
                            <div class="form-group row">

                                <div class="col-md-4">                                   
                                    @Html.Label("Дата:", htmlAttributes: new { @style = "font-weight: inherit;" })<br>                                   
                                </div>
                               
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.FilterOrderDate, new { htmlAttributes = new { @class = "order-dates form-control datetimepicker client-info", autocomplete = "off", data_raw_element = "FilterOrderDateRaw", @style = "height: 2em!important; display:inline;" } })
                                        @Html.HiddenFor(model => model.FilterOrderDate)
                                        @Html.HiddenFor(model => model.FilterOrderDateRaw)
                                    </div>                                                             
                            </div>
                          
                            <div class="form-group row">
                                <label class="col-md-4" style="font-weight: normal !important;">
                                    @Html.CheckBoxFor(model => model.UseOrderTypeFilter, new { onclick = "$('#FilterOrderTypeId').prop('disabled', !this.checked);" })&nbsp;Тип заявки
                                </label>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.FilterOrderTypeId,
                                        Model.UseOrderTypeFilter ?
                                            (object)new
                                            {
                                                id = "FilterOrderTypeId",
                                                @class = "filter_dropdown",
                                                @name = "FilterOrderTypeId",
                                                data_source_url = Url.Action("GetOrderTruckTypes", "Orders"),
                                                data_droplist_placeholder = "Введите тип заявки",
                                                data_selected_text = Model.FilterOrderTypeName
                                            } :
                                            (object)new
                                            {
                                                id = "FilterOrderTypeId",
                                                @class = "filter_dropdown",
                                                @name = "FilterOrderTypeId",
                                                data_source_url = Url.Action("GetOrderTruckTypes", "Orders"),
                                                data_droplist_placeholder = "Введите тип заявки",
                                                @disabled = "disabled",
                                                data_selected_text = Model.FilterOrderTypeName
                                            })
                                </div>
                                @Html.HiddenFor(model => model.FilterOrderTypeId)
                                @Html.HiddenFor(model => model.UseOrderTypeFilter)
                            </div>                          
                        </div>

                        <div class="form-group">
                            <div style="margin-top: 10px;">                                
                                <input type="submit" value="Применить" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                </div>
            }


            <div class="table-header clearfix">
                <div class="TreeWrapper">
                    <div id="treeGrid">
                        <span>Идет загрузка данных...</span>
                    </div>
                </div>
            </div>
           

        </div>
    </div>
</div>


@section scripts
{
    <script>

        $(document).ready(function() {
            InitializeDateTimePickers();
            InitFilterMultipleDropDowns();

            var source =
            {
                dataType: "json",
                dataFields: [
                    { name: 'Id', type: 'string' },
                    { name: 'Name', type: 'string' },
                    { name: 'ShipperCity', type: 'string' },
                    { name: 'ShipperAdress', type: 'string' },
                    { name: 'Shipper', type: 'string' },
                     { name: 'ShipperId', type: 'string' },
                    { name: 'IdParent', type: 'string' },                   
                    { name: 'IsLeaf', type: 'string' },
                    { name: 'ReportsDate', type: 'string' },
                    { name: 'UseOrderTypeFilter', type: 'string' },
                    { name: 'FilterOrderTypeId', type: 'string' },
                    { name: 'IdGroudId', type: 'string' },
                    { name: 'IdTree', type: 'string' }
                ],
                hierarchy:
                {
                    keyDataField: { name: 'Id' },
                    parentDataField: { name: 'IdParent' }
                },
                id: 'Id',
                localData: @Html.Raw(Model.JSONData),
            };

            var dataAdapter = new $.jqx.dataAdapter(source);

            dataAdapter.dataBind();

            var NameRenderer = function(row, column, value, data) {
                var custom_cell_dom = value;
                return custom_cell_dom;
            };

            var renderer = function(row, column, value, data) {


                var custom_cell_dom = '';

                // if (data.IsLeaf) {
                //   debugger;
                custom_cell_dom = '<div class="edit-delete-copy-links">' +
                    '<a class="tarash-i update_link tooltips" href="TruckReportDetails?ReportDate=' + data.ReportsDate + '&UseOrderTypeFilter=' + data.UseOrderTypeFilter + '&FilterOrderTypeId=' + data.FilterOrderTypeId + '&IdTree=' + data.IdTree + '&IdGroup=' + data.IdGroudId + '&Id=' + data.Id + '">' +
                    '<span class="tooltip-message">Просмотр</span>' +
                    '<span class="glyphicon glyphicon-eye-open"></span>' +
                    '</a> ' +
                    '</div>';
                //}

                return custom_cell_dom;
            };


            $("#treeGrid").jqxTreeGrid(
            {
                width: '100%',
                source: dataAdapter,
                columnsResize: true,
                sortable: true,
                filterable: true,
                theme: 'nms',
                selectionMode: 'singleRow',
                pageable: false,
                filterHeight: 50,
                icons: true,
                autoShowLoadElement: true,
                //localization: getNoLocalizationForJQWidgets(),
                editable: false,
                altRows: true,
                ready: function() {

                    var Id = localStorage.getItem("Id");

                    var rows = $("#treeGrid").jqxTreeGrid('getRows');
                    var traverseTree = function(rows) {
                        for (var i = 0; i < rows.length; i++) {
                            if (rows[i].records) {
                                idValue = rows[i][idColumn];
                                $("#treeGrid").jqxTreeGrid('expandRow', idValue);
                                traverseTree(rows[i].records);
                            }
                        }
                    };
                    var idColumn = $("#treeGrid").jqxTreeGrid('source')._source.id;
                    traverseTree(rows);


                },
                columns: [
                    { text: "Страна/Город/Адрес", dataField: 'Name', cellsrenderer: NameRenderer, width: '40%' },                  
                    { text: "Грузотправитель/Грузополучатель", dataField: 'Shipper', cellsrenderer: NameRenderer, width: '55%' },
                    { text: "", dataField: 'Id', cellsrenderer: renderer, width: '5%' }
                ]
            });


        });
    </script>
}














